package com.github.catvod.demo;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import android.content.Context;

import com.github.catvod.crawler.Spider;
import com.github.catvod.spider.Douban;

import org.json.JSONArray;
import org.json.JSONObject;

public class MainActivity {
    public static void main(String[] args) {
        Douban spider = new Douban();
        // 外接字符串，可用于自定义
        spider.init(new Context(),
                "https://wisteria.cf/raw.githubusercontent.com/asters1/source/master/tvbox/json/localhost.json");
        // 筛选HashMap

        // 搜索开关，1为true,0为false
        int search_switch = 0;
        if (search_switch == 1) {
            // 搜索,key为空的话，将使用默认值:==>琅琊榜
            List<String> res_search = test_search(spider, "");
            ArrayList<String> res_detail = test_detail(spider, res_search.get(0));
            test_player(spider, res_detail.get(0));

        } else {
            Class_res_home res_home = test_home(spider);

            // res_home.array.getString(0)测试是电视剧还是电影...，可以根据index来切换
            String tid = res_home.array.getString(0);
            // 筛选
            ArrayList<HashMap<String, String>> filters = res_home.extend.get(tid);
            // filters.get(0)是测试是动作片还是喜剧片...,可以根据index来切换，
            HashMap<String, String> extend = filters.get(1);
            List<String> res_category = test_category(spider, tid, extend);
            // res_category.get(1)测试是那一部视频...，可以根据index来切换
            ArrayList<String> res_detail = test_detail(spider, res_category.get(1));
            test_player(spider, res_detail.get(0));
        }
    }

    public static Class_res_home test_home(Spider spider) {

        // 标题栏
        Class_res_home res_class = new Class_res_home();
        JSONArray res = new JSONArray();
        HashMap<String, ArrayList<HashMap<String, String>>> res_extend = new HashMap<>();
        System.out.println("==========homeContent:=======\n");
        String strhomeContent = spider.homeContent(true);
        if (strhomeContent.equals("")) {
            System.out.println("homeContent返回为空");
            System.exit(0);
        }
        JSONObject result = new JSONObject(new String(strhomeContent));
        try {
            JSONArray classes = result.getJSONArray("class");
            try {
                for (int i = 0; i < classes.length(); i++) {
                    System.out.print(classes.getJSONObject(i).get("type_name") + "["
                            + classes.getJSONObject(i).get("type_id") + "]" + "\r\n");

                    try {
                        JSONArray filters = result.getJSONObject("filters")
                                .getJSONArray(classes.getJSONObject(i).getString("type_id"));
                        for (int j = 0; j < filters.length(); j++) {

                            System.out.print(filters.getJSONObject(j).getString("name") + "  ");
                            JSONArray value = filters.getJSONObject(j).getJSONArray("value");
                            String key = filters.getJSONObject(j).getString("key");
                            // HashMap<String, ArrayList<HashMap<String, String>>> leixing = new
                            // HashMap<String, ArrayList<HashMap<String, String>>>();
                            ArrayList<HashMap<String, String>> leixing = new ArrayList<>();
                            for (int k = 0; k < value.length(); k++) {
                                HashMap<String, String> hashMap = new HashMap<>();
                                System.out.print(value.getJSONObject(k).getString("n") + "  ");
                                hashMap.put(key, value.getJSONObject(k).getString("v"));
                                leixing.add(hashMap);

                            }
                            System.out.println("\r\n");
                            res_extend.put(classes.getJSONObject(i).getString("type_id"), leixing);
                        }

                    } catch (Exception e) {
                        System.out.println("\r\n未读取到[" + classes.getJSONObject(i).get("type_id") + "]的筛选信息");
                    }

                    res.put(classes.getJSONObject(i).get("type_id"));
                }
                System.out.println();
            } catch (Exception e) {
                System.out.println("未读取到type_name或者type_id，请检查！");
            }
        } catch (Exception e) {
            System.out.println("未读取到class，请检查！");
        }

        res_class.array = res;
        res_class.extend = res_extend;
        return res_class;
    }

    public static List<String> test_category(Spider spider, String tid, HashMap<String, String> extend) {
        System.out.println("\r\n你测试的分类为:" + tid);
        System.out.println("\r\n你测试的筛选为:" + extend);

        List<String> res = new ArrayList<>();
        // 标题栏下的视频内容
        System.out.println("\r\n==========categoryContent:=======\r\n");
        String strcategoryContent = spider.categoryContent(tid, "1", true, extend);
        if (strcategoryContent.equals("")) {
            System.out.println("categoryContent返回为空");
            System.exit(0);
        }
        JSONObject result = new JSONObject(new String(strcategoryContent));
        try {
            int page = result.getInt("page");
            System.out.println("//当前页");
            System.out.println("page:" + page);
        } catch (Exception e) {
            System.out.println("//当前页");
            System.out.println("没有解析到page，请检查！！！");
        }
        try {
            int pagecount = result.getInt("pagecount");
            System.out.println("// 总共几页");
            System.out.println("pagecount:" + pagecount);
        } catch (Exception e) {
            System.out.println("// 总共几页");
            System.out.println("没有解析到pagecount，请检查！！！");
        }
        try {
            int limit = result.getInt("limit");
            System.out.println("// 每页几条数据");
            System.out.println("limit:" + limit);
        } catch (Exception e) {
            System.out.println("// 每页几条数据");
            System.out.println("没有解析到limit，请检查！！！");
        }
        try {
            int total = result.getInt("total");
            System.out.println(" // 总共多少条数据");
            System.out.println("total:" + total);
        } catch (Exception e) {
            System.out.println(" // 总共多少条数据");
            System.out.println("没有解析到total，请检查！！！");
        }
        try {
            JSONArray list = result.getJSONArray("list");
            System.out.println(" //视频列表");
            try {
                for (int i = 0; i < list.length(); i++) {
                    System.out.print(list.getJSONObject(i).get("vod_name") + "["
                            + list.getJSONObject(i).get("vod_id") + "]" + "\r\n");
                    res.add(list.getJSONObject(i).get("vod_id").toString());
                }
            } catch (Exception e) {
                System.out.println("视频列表解析出现问题，请检查!");
            }
        } catch (Exception e) {
            System.out.println(" // 总共多少调数据");
            System.out.println("没有解析到list，请检查！！！");
        }

        return res;

    }

    public static ArrayList<String> test_detail(Spider spider, String ids0) {
        // 视频详细信息,注意List<String> ids只有一个tid
        ArrayList<String> result_url = new ArrayList<String>();
        List<String> ids = new ArrayList<>();
        ids.add(ids0);
        System.out.println("\r\n==========detailContent:=======\r\n");
        System.out.println("你测试的链接是:" + ids0);
        JSONArray data = new JSONArray();
        String strdetailContent = spider.detailContent(ids);
        if (strdetailContent.equals("")) {
            System.out.println("detailContent返回为空");
            System.exit(0);
        }
        JSONObject result = new JSONObject(new String(strdetailContent));
        try {
            JSONArray list = result.getJSONArray("list");
            try {
                String vod_play_from = list.getJSONObject(0).getString("vod_play_from");
                for (String s : vod_play_from.split("\\$\\$\\$")) {
                    JSONObject source = new JSONObject();
                    source.put("source_name", s);
                    data.put(source);
                }
                // System.out.println(data);
            } catch (Exception e) {
                System.out.println("没有解析到vod_play_from,请检查!!!");
            }
            try {
                String vod_play_url = list.getJSONObject(0).getString("vod_play_url");
                int i = 0;
                for (String url_list : vod_play_url.split("\\$\\$\\$")) {
                    JSONArray d = new JSONArray();
                    for (String name_url : url_list.split("\\#")) {
                        JSONArray n_u = new JSONArray();
                        for (String value : name_url.split("\\$")) {
                            n_u.put(value);
                        }

                        d.put(n_u);

                    }
                    data.getJSONObject(i).put("data", d);
                    i = i + 1;

                }

            } catch (Exception e) {
                System.out.println("没有解析到vod_play_url,请检查!!!");
            }
            for (int j = 0; j < data.length(); j++) {
                System.out.println();
                for (int k = 0; k < data.getJSONObject(j).getJSONArray("data").length(); k++) {
                    System.out.println(data.getJSONObject(j).getString("source_name") + "--->"
                            + data.getJSONObject(j).getJSONArray("data").getJSONArray(k).getString(0) + "[ "
                            + data.getJSONObject(j).getJSONArray("data").getJSONArray(k).getString(1) + " ]");
                    result_url.add(data.getJSONObject(j).getJSONArray("data").getJSONArray(k).getString(1));

                }

            }
            return result_url;

            // System.out.println(list);
        } catch (Exception e) {
            System.out.println("未读取到list,请检查!!");
        }

        return null;

    }

    public static String test_player(Spider spider, String url) {
        // 播放内容
        System.out.println("\r\n==========playerContent=======\r\n");
        System.out.println("测试地址为:" + url);
        String strplayerContent = spider.playerContent("", url, null);
        System.out.println(strplayerContent);
        System.exit(0);

        return "";
    }

    public static List<String> test_search(Spider spider, String key) {
        List<String> res = new ArrayList<>();

        System.out.println("\r\n==========searchContent=======\r\n");
        if (key.equals("")) {
            System.out.println("关键字为空，使用默认值==>斗罗大陆\r\n");
            key = "斗罗大陆";
        } else {
            System.out.println("你测试的搜索关键字为==>" + key + "\r\n");

        }
        String strsearchContent = spider.searchContent(key, true);
        if (strsearchContent.equals("")) {
            System.out.println("searchContent返回为空");
            System.exit(0);
        }
        JSONObject result = new JSONObject(new String(strsearchContent));
        try {

            JSONArray list = result.getJSONArray("list");
            for (int i = 0; i < list.length(); i++) {
                try {

                    String vod_id = list.getJSONObject(i).getString("vod_id");
                    try {

                        String vod_name = list.getJSONObject(i).getString("vod_name");
                        System.out.println(vod_name + "[" + vod_id + "]");
                        res.add(vod_id);
                    } catch (Exception e) {
                        System.out.println("没有解析到vod_name");
                    }
                } catch (Exception e) {
                    System.out.println("没有解析到vod_id");
                }
            }
            return res;

        } catch (Exception e) {

            System.out.println("没有解析到list");
        }
        System.exit(0);

        return null;
    }

}

class Class_res_home {
    JSONArray array;
    HashMap<String, ArrayList<HashMap<String, String>>> extend;
}
